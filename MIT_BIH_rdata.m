% 一组数据(hea,atr,dat)中有65w个采样点，可以根据需要自己选择需要采样的数目,读入4096则有10个波峰，至少9个完整周期
% 横坐标存储在矩阵TIME中，可以根据需要自己转换成序号1,2,...,SAMPLES2READ
% 电压值存储在M中，由于有二通道，所以M的大小为SAMPLES2READ*2,可以只选用单个通道，也可以两个都选,暂时选择MILL导连
function [VOLTAGE,fs] = MIT_BIH_rdata(i,PATH)

SAMPLES2READ=65536*8;
% VOLTAGE = zeros(SAMPLES2READ,2);


HEADERFILE = strcat(num2str(i),'.hea');      % .hea 格式，头文件，可用记事本打开
DATAFILE = strcat(num2str(i),'.dat');         % .dat 格式，ECG 数据，每三个字节存储两个数，一个数12bit
fprintf('$> WORKING ON %s ...\n', HEADERFILE);
%------ LOAD HEADER DATA --------------------------------------------------
%------ 读入头文件数据 -----------------------------------------------------
%
% 示例：用记事本打开的117.hea 文件的数据
%
%      117 2 360 650000        % 第一个数117为数据id，第二个数2为信号通道数目，第三个数360为数据采样频率
%      117.dat 212 200 11 1024 839 31170 0 MLII  % 信号通道数目为2，因此后面还有两行数据
%      117.dat 212 200 11 1024 930 28083 0 V2    % 每个信号通道中，第一个整数数据212为格式编码
%      # 69 M 950 654 x2                         % 第二个整数数据200为每个信号增益是200ADCunits/Mv
%      # None                                    % 第三个整数数据11为采样精度（位分辨率）ADC11位
%                                                % 第四个整数数据1024为ECG信号零点相应的整数值
%                                                % 第五个整数数据839/930为信号的第一个整数值
%-------------------------------------------------------------------------

% 以下均以117.hea, 117.atr和117.dat为例
%     fprintf(1,'$> WORKING ON %s ...\n', HEADERFILE); % 在Matlab命令行窗口提示当前工作状态
% 
% 【注】函数 fprintf 的功能将格式化的数据写入到指定文件中。
% 表达式：count = fprintf(fid,format,A,...)
% 在字符串'format'的控制下，将矩阵A的实数数据进行格式化，并写入到文件对象fid中。该函数返回所写入数据的字节数 count。
% fid 是通过函数 fopen 获得的整型文件标识符。fid=1，表示标准输出（即输出到屏幕显示）；fid=2，表示标准偏差。
%
signalh= fullfile(PATH, HEADERFILE);    % 通过函数 fullfile 获得头文件的完整路径, 例如MIT_BIH_ECG_database\100.hea
fid1=fopen(signalh,'r');    % 打开头文件，其标识符为 fid1 ，属性为'r'--“只读”
z= fgetl(fid1);             % 读取头文件的第一行数据，字符串格式, 读取内容为117 2 360 650000, fgetl()，每次读1行, 第二次调用读第二行
A= sscanf(z, '%*s %d %d %d',[1,3]); % 按照格式 '%*s %d %d %d' 转换数据并存入矩阵 A 中, 只会存入%d部分
nosig= A(1);    % 信号通道数目
sfreq=A(2);     % 数据采样频率
fs = sfreq;
clear A;        % 清空矩阵 A ，准备获取下一行数据
for k=1:nosig           % 读取每个通道信号的数据信息
    z= fgetl(fid1);     % 读下一行数据
    A= sscanf(z, '%*s %d %d %d %d %d',[1,5]);
    dformat(k)= A(1);           % 信号格式; 这里只允许为 212 格式
    gain(k)= A(2);              % 每 mV 包含的整数个数
    bitres(k)= A(3);            % 采样精度（位分辨率）
    zerovalue(k)= A(4);         % ECG 信号零点相应的整数值
    firstvalue(k)= A(5);        % 信号的第一个整数值 (用于偏差测试)
end;
        
fclose(fid1);
clear A;
% 头文件数据读取完毕，放在nosig, sfreq, dformat, gain, bitres, zerovalue和firstvalue中

%------ LOAD BINARY DATA --------------------------------------------------
%------ 读取 ECG 信号二值数据 ----------------------------------------------
%
if dformat~= [212,212], error('this script does not apply binary formats different to 212.'); end;  % 格式编码必须为两个212
signald= fullfile(PATH, DATAFILE);            % 读入 212 格式的 ECG 信号数据, 'MIT_BIH_ECG_database\117.dat'
fid2=fopen(signald,'r');

% fread(fid,size,precision)以二进制形式从文件中读取出数据,
% size若为[M,N], 把变量直接读入M行N列的矩阵，逐列写入变量
A= fread(fid2, [3, SAMPLES2READ*5], 'uint8')';  % matrix with 3 rows, each 8 bits long, = 2*12bit
fclose(fid2);
% 通过一系列的移位（bitshift）、位与（bitand）运算，将信号由二值数据转换为十进制数
M2H= bitshift(A(:,2), -4);        %字节向右移四位，即取字节的高四位
M1H= bitand(A(:,2), 15);          %取字节的低四位，与1111进行与，即取末四位
PRL=bitshift(bitand(A(:,2),8),9);     % sign-bit   取出字节低四位中最高位，向左移九位
PRR=bitshift(bitand(A(:,2),128),5);   % sign-bit   取出字节高四位中最高位，向左移五位
M( : , 1)= bitshift(M1H,8)+ A(:,1)-PRL;
M( : , 2)= bitshift(M2H,8)+ A(:,3)-PRR;
if M(1,:) ~= firstvalue
    disp('$> inconsistency in the first bit values');
end;
% plot(M(1:65536*8,1),'b')

% switch nosig
% case 2
%     M( : , 1)= (M( : , 1)- zerovalue(1))/gain(1);
%     M( : , 2)= (M( : , 2)- zerovalue(2))/gain(2);
% case 1
%     M( : , 1)= (M( : , 1)- zerovalue(1));
%     M( : , 2)= (M( : , 2)- zerovalue(1));
%     M=M';
%     M(1)=[];
%     sM=size(M);
%     sM=sM(2)+1;
%     M(sM)=0;
%     M=M';
%     M=M/gain(1);
% otherwise  % this case did not appear up to now!
%     % here M has to be sorted!!!
%     disp('Sorting algorithm for more than 2 signals not programmed yet!');
% end;
clear A M1H M2H PRR PRL;
fprintf(1,'$> LOADING DATA FINISHED\n');

DISPLAY = 0;
%------ DISPLAY DATA --------------------------------------------------
if DISPLAY
    NUMBER = 1:SAMPLES2READ;
    figure; clf, box on, hold on
    % 画出第一条通道的信号
    size(M)
    plot(NUMBER, M(1:SAMPLES2READ,1),'r');
    % 如果双通道，把第二个也画出来
    if nosig==2
        plot(NUMBER, M(1:SAMPLES2READ,2),'b');
    end;
    xlim([NUMBER(1), NUMBER(end)]);
    xlabel('Time / s'); ylabel('Voltage / mV');
    string=['ECG signal ',DATAFILE];
    title(string);
    grid on
    hold off
end
% ---------------------------------------------------------------------
    
%------ STORE DATA ----------------------------------------------------

VOLTAGE = M(1:SAMPLES2READ,:);
fprintf('$> %s FINISHED\n', HEADERFILE);